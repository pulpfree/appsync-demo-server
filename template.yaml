AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Lambda Resolver Functions

Parameters:

  ParamProjectName:
    Type: String
  ParamENV:
    Type: String
  ParamKeyExpiration:
    Type: Number

Resources:
  ResolverFunc:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: build/
      Role: !GetAtt LambdaExecutionRole.Arn
      # Timeout: 20
      # MemorySize: 384
      Environment:
        Variables:
          Stage: prod
      VpcConfig:
        SecurityGroupIds:
          - sg-5afb2932
          - sg-8f6baee7
        SubnetIds:
          - subnet-0da8d176
          - subnet-7f092816
      Events:
        AnyRequest:
          Type: Api
          Properties:
            Path: /
            Method: ANY

  AppSyncAPI:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: !Join [ -, [ !Ref ParamProjectName, !Ref ParamENV ] ]

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - appsync.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: allow-access-to-lambda-from-appsync
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: lambda:invokeFunction
            Resource:
              # this presents a problem when first creating resources as this doesn't exist
              Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:rn-test-ResolverFunc-G6BOHV08QKKV
              # when using the below, I get "Circular dependency between resources" error
              # - !GetAtt [ ResolverFunc, Arn ]
              # - !Join [ '', [ !GetAtt [ ResolverFunc, Arn ], ':*' ] ]
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
      - PolicyName: FunctionLambdaVPCAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ec2:CreateNetworkInterface
            - ec2:DeleteNetworkInterface
            - ec2:DescribeNetworkInterfaces
            Resource: '*'
      - PolicyName: FunctionXRayAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - xray:PutTraceSegments
            - xray:PutTelemetryRecords
            Resource: '*'
      - PolicyName: FunctionParameterAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ssm:GetParametersByPath
            Resource:
              Fn::Sub: arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/prod/rn-test*
